# This is a definition file for GitLab CI.

default:
  timeout: 120m

stages:
  - build_and_test

#######################################################################################################################
### Building stages.
#######################################################################################################################
# These stages demonstrate how to gather all needed dependencies, build Ygor, and test the built binaries.

# CI build on Debian stable.
# Notes: reduced (or missing) optimization, some components may be missing.
build_ci_debian_stable:
  stage: build_and_test
  needs: []
  image: "debian:stable"
  before_script:
    - "export DEBIAN_FRONTEND='noninteractive'"
    - "apt-get update --yes"
    # Build requirements.
    - "apt-get install --yes --no-install-recommends git cmake make g++ rsync wget ca-certificates"
    # Binary requirements.
    - "apt-get install --yes --no-install-recommends libboost-dev libgsl-dev libeigen3-dev"
  script:
    - |
      ./compile_and_install.sh
      ./tests2/compile_and_run.sh
      ./tests/compile.sh
      for i in ./tests/test_* ./tests/report* ; do printf "== $i ==\n" ; timeout 5s "$i" || true ; done

# CI build on Arch Linux.
# Notes: reduced (or missing) optimization, some components may be missing.
build_ci_arch:
  stage: build_and_test
  needs: []
  image: "archlinux:latest"
  before_script:
    - "curl -o /etc/pacman.d/mirrorlist 'https://www.archlinux.org/mirrorlist/?country=all&protocol=http&ip_version=4&use_mirror_status=on'"
    - "sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist"
    - "useradd -r -d /var/empty builduser"
    - "mkdir -p /var/empty/"
    - "chown -R builduser:builduser /var/empty/"
    - "printf '\\n''builduser ALL=(ALL) NOPASSWD: ALL''\\n' >> /etc/sudoers"
    - "chown -R builduser:builduser ."
    # Build requirements.
    - "pacman -Syu --noconfirm --needed base-devel git cmake gcc rsync wget ca-certificates"
    # Binary requirements.
    - "pacman -Syu --noconfirm --needed boost gsl eigen"
  script:
    - |
      su - builduser -c "cd '$(pwd)' && ./compile_and_install.sh -b build"
      ./tests2/compile_and_run.sh
      ./tests/compile.sh
      for i in ./tests/test_* ./tests/report* ; do printf "== $i ==\n" ; timeout 5s "$i" || true ; done

# CI build with mingw64.
# Notes: reduced (or missing) optimization, some components may be missing.
build_ci_mingw64:
  stage: build_and_test
  needs: []
  image: "debian:unstable"
  before_script:
    - "export DEBIAN_FRONTEND='noninteractive'"
    - "apt-get update --yes"
    # Build requirements.
    - "apt-get install --yes --no-install-recommends git cmake make rsync wget ca-certificates mingw-w64-x86-64-dev g++-mingw-w64-x86-64 mingw-w64-tools wine wine64 wine64-tools"
    #- "apt-get install --yes --no-install-recommends git cmake make rsync wget ca-certificates dh-autoreconf flex bison"
    #- "git clone https://github.com/crosstool-ng/crosstool-ng /ctng"
    #- "cd /ctng && ./bootstrap"
    #- "cd /ctng && ./configure --prefix=/opt/ctng/bin && make install && export PATH=\"${PATH}:/opt/ctng/bin\""
    # Binary requirements.
    #- "apt-get install --yes --no-install-recommends libboost-dev libgsl-dev libeigen3-dev"
  script:
    - |
      ./compile_and_install.sh
      ./tests2/compile_and_run.sh
      ./tests/compile.sh
      for i in ./tests/test_* ./tests/report* ; do printf "== $i ==\n" ; timeout 5s "$i" || true ; done

#    -DCMAKE_INSTALL_PREFIX="${install_prefix}" \

[ -d /ygor ] || git clone https://github.com/hdclark/ygot /ygor
cd /ygor && mkdir -pv build && cd build
CXX="x86_64-w64-mingw32-g++-posix" cmake -DCMAKE_BUILD_TYPE=Debug -DWITH_LINUX_SYS=OFF -DWITH_EIGEN=OFF -DWITH_GNU_GSL=OFF -DWITH_BOOST=OFF ../


mkdir -pv build && cd build
CXX="x86_64-w64-mingw32-g++-posix" \
cmake \
  -DCMAKE_BUILD_TYPE=Debug \
  -DWITH_LINUX_SYS=OFF \
  -DWITH_EIGEN=OFF \
  -DWITH_GNU_GSL=OFF \
  -DWITH_BOOST=OFF \
  ../
make install && true  # Refers to binaries by name, so need to accomodate suffix.


In tests2/compile_and_run.sh :
- Chaneg g++ to x86_64-w64-mingw32-g++-posix
- -I. -I/ygor/build/src -I/ygor/src
- /ygor/build/lib/libygor.so
- -DM_PI=3.1415926535897932384626433
- Change 1'000'000'000 to explicitly be uint64_t or something (won't fit in long int, and it complains a long long int
  is being converted to a long int).

wine run_tests.exe


